{"version":3,"file":"esri-loader.min.js","sources":["esm/esri-loader.js"],"sourcesContent":["/*\n  Copyright 2017 Esri\n  Licensed under the Apache License, Version 2.0 (the \"License\");\n  you may not use this file except in compliance with the License.\n  You may obtain a copy of the License at\n    http://www.apache.org/licenses/LICENSE-2.0\n  Unless required by applicable law or agreed to in writing, software\n  distributed under the License is distributed on an \"AS IS\" BASIS,\n  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n  See the License for the specific language governing permissions and\n  limitations under the License.\n*/\nvar DEFAULT_URL = 'https://js.arcgis.com/4.5/';\n// get the script injected by this library\nfunction getScript() {\n    return document.querySelector('script[data-esri-loader]');\n}\n// TODO: at next breaking change replace the public isLoaded() API with this\nfunction _isLoaded() {\n    var globalRequire = window['require'];\n    // .on() ensures that it's Dojo's AMD loader\n    return globalRequire && globalRequire.on;\n}\nfunction createScript(url) {\n    var script = document.createElement('script');\n    script.type = 'text/javascript';\n    script.src = url;\n    // TODO: remove this if no longer needed\n    script.dataset['esriLoader'] = 'loading';\n    return script;\n}\n// add a one-time load handler to script\n// and optionally add a one time error handler as well\nfunction handleScriptLoad(script, callback, errback) {\n    var onScriptError;\n    if (errback) {\n        // set up an error handler as well\n        onScriptError = handleScriptError(script, errback);\n    }\n    var onScriptLoad = function () {\n        // pass the script to the callback\n        callback(script);\n        // remove this event listener\n        script.removeEventListener('load', onScriptLoad, false);\n        if (onScriptError) {\n            // remove the error listener as well\n            script.removeEventListener('error', onScriptError, false);\n        }\n    };\n    script.addEventListener('load', onScriptLoad, false);\n}\n// add a one-time error handler to the script\nfunction handleScriptError(script, callback) {\n    var onScriptError = function (e) {\n        // reject the promise and remove this event listener\n        callback(e.error || new Error(\"There was an error attempting to load \" + script.src));\n        // remove this event listener\n        script.removeEventListener('error', onScriptError, false);\n    };\n    script.addEventListener('error', onScriptError, false);\n    return onScriptError;\n}\n// allow consuming libraries to provide their own Promise implementations\nexport var utils = {\n    Promise: window['Promise']\n};\n// has ArcGIS API been loaded on the page yet?\nexport function isLoaded() {\n    // TODO: replace this implementation with that of _isLoaded() on next major release\n    return typeof window['require'] !== 'undefined' && getScript();\n}\n// load the ArcGIS API on the page\nexport function loadScript(options) {\n    if (options === void 0) { options = {}; }\n    // default options\n    if (!options.url) {\n        options.url = DEFAULT_URL;\n    }\n    return new utils.Promise(function (resolve, reject) {\n        var script = getScript();\n        if (script) {\n            // the API is already loaded or in the process of loading...\n            // NOTE: have to test against scr attribute value, not script.src\n            // b/c the latter will return the full url for relative paths\n            var src = script.getAttribute('src');\n            if (src !== options.url) {\n                // potentailly trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded (\" + src + \").\"));\n            }\n            else {\n                if (_isLoaded()) {\n                    // the script has already successfully loaded\n                    resolve(script);\n                }\n                else {\n                    // wait for the script to load and then resolve\n                    handleScriptLoad(script, resolve, reject);\n                }\n            }\n        }\n        else {\n            if (_isLoaded()) {\n                // the API has been loaded by some other means\n                // potentailly trying to load a different version of the API\n                reject(new Error(\"The ArcGIS API for JavaScript is already loaded.\"));\n            }\n            else {\n                // this is the first time attempting to load the API\n                if (options.dojoConfig) {\n                    // set dojo configuration parameters before loading the script\n                    window['dojoConfig'] = options.dojoConfig;\n                }\n                // create a script object whose source points to the API\n                script = createScript(options.url);\n                // once the script is loaded...\n                // TODO: once we no longer need to update the dataset, replace this w/\n                // handleScriptLoad(script, resolve, reject);\n                handleScriptLoad(script, function () {\n                    // update the status of the script\n                    script.dataset['esriLoader'] = 'loaded';\n                    // return the script\n                    resolve(script);\n                }, reject);\n                // load the script\n                document.body.appendChild(script);\n            }\n        }\n    });\n}\n// wrap dojo's require() in a promise\nfunction requireModules(modules) {\n    return new utils.Promise(function (resolve, reject) {\n        // If something goes wrong loading the esri/dojo scripts, reject with the error.\n        var errorHandler = window['require'].on('error', reject);\n        window['require'](modules, function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // remove error handler\n            errorHandler.remove();\n            // Resolve with the parameters from dojo require as an array.\n            resolve(args);\n        });\n    });\n}\n// returns a promise that resolves with an array of the required modules\n// also will attempt to lazy load the ArcGIS API if it has not already been loaded\nexport function loadModules(modules, loadScriptOptions) {\n    if (!_isLoaded()) {\n        // script is not yet loaded, attept to load it then load the modules\n        return loadScript(loadScriptOptions).then(function () { return requireModules(modules); });\n    }\n    else {\n        // script is already loaded, just load the modules\n        return requireModules(modules);\n    }\n}\n// TODO: remove this next major release\nexport function bootstrap(callback, options) {\n    if (options === void 0) { options = {}; }\n    console.warn('bootstrap() has been depricated and will be removed the next major release. Use loadScript() instead.');\n    // default options\n    if (!options.url) {\n        options.url = DEFAULT_URL;\n    }\n    // don't reload API if it is already loaded or in the process of loading\n    if (getScript()) {\n        if (callback) {\n            callback(new Error('The ArcGIS API for JavaScript is already loaded.'));\n        }\n        return;\n    }\n    if (options.dojoConfig) {\n        // set dojo configuration parameters before loading the script\n        window['dojoConfig'] = options.dojoConfig;\n    }\n    // create a script object whose source points to the API\n    var script = createScript(options.url);\n    // once the script is loaded...\n    script.onload = function () {\n        // update the status of the script\n        script.dataset['esriLoader'] = 'loaded';\n        // we can now use Dojo's require() to load esri and dojo AMD modules\n        var _dojoRequire = window['require'];\n        if (callback) {\n            // let the caller know that the API has been successfully loaded\n            // and as a convenience, return the require function\n            // in case they want to use it directly\n            callback(null, _dojoRequire);\n        }\n    };\n    if (callback) {\n        // handle any script loading errors\n        handleScriptError(script, callback);\n    }\n    // load the script\n    document.body.appendChild(script);\n}\n// TODO: remove this next major release\nexport function dojoRequire(modules, callback) {\n    /* tslint:disable max-line-length */\n    console.warn('dojoRequire() has been depricated and will be removed the next major release. Use loadModules() instead.');\n    /* tslint:enable max-line-length */\n    if (isLoaded()) {\n        // already loaded, just call require\n        window['require'](modules, callback);\n    }\n    else {\n        // wait for script to load then call require\n        var script = getScript();\n        if (script) {\n            // Not yet loaded but script is in the body - use callback once loaded\n            handleScriptLoad(script, function () {\n                window['require'](modules, callback);\n            });\n        }\n        else {\n            // Not bootstrapped\n            throw new Error('The ArcGIS API for JavaScript has not been loaded. You must first call esriLoader.bootstrap()');\n        }\n    }\n}\n// export a namespace to expose all functions\nexport default {\n    isLoaded: isLoaded,\n    loadScript: loadScript,\n    loadModules: loadModules,\n    utils: utils,\n    // TODO: remove these the next major release\n    bootstrap: bootstrap,\n    dojoRequire: dojoRequire\n};\n"],"names":["getScript","document","querySelector","_isLoaded","globalRequire","window","on","createScript","url","script","createElement","type","src","dataset","handleScriptLoad","callback","errback","onScriptError","handleScriptError","onScriptLoad","removeEventListener","addEventListener","e","error","Error","isLoaded","loadScript","options","DEFAULT_URL","utils","Promise","resolve","reject","getAttribute","dojoConfig","body","appendChild","requireModules","modules","errorHandler","args","_i","arguments","length","remove","loadModules","loadScriptOptions","then","bootstrap","console","warn","onload","_dojoRequire","dojoRequire"],"mappings":"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"}